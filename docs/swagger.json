{
    "openapi": "3.1.0",
    "info": {
      "version": "1.0.0",
      "title": "Contacts app",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "description": "This is a documentation of contacts app"
    },
    "servers": [
      {
        "url": "http://localhost:3000"
      },
      {
        "url": "https://contacts-swagger-v1ra.onrender.com"
      }
    ],
    "tags": [
      {
        "name": "Contacts",
        "description": "Operations about users."
      },
      {
        "name": "Auth",
        "description": "Auth operations."
      }
    ],
    "paths": {
      "/contacts/{id}": {
        "get": {
          "tags": [
            "Contacts"
          ],
          "summary": "Get contact by id",
          "operationId": "getContact",
          "description": "Get contact by id",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "example": "65ca67e7ae7f10c88b598384"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Get contact by id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "delete": {
          "tags": [
            "Contacts"
          ],
          "summary": "Delete contact by id",
          "operationId": "deleteContact",
          "description": "Delete contact by id",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "example": "65ca67e7ae7f10c88b598384"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Delete contact by id"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "patch": {
          "tags": [
            "Contacts"
          ],
          "summary": "Update contact by id",
          "operationId": "updateContact",
          "description": "Update contact by id",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "example": "65ca67e7ae7f10c88b598384"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Contact's name",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "phoneNumber": {
                      "description": "Contact's phone number",
                      "type": "string",
                      "example": 380000000001
                    },
                    "email": {
                      "description": "Contact's email",
                      "type": "string",
                      "example": "oleh1@example.com"
                    },
                    "isFavourite": {
                      "description": "Whether the contact is favourite",
                      "type": "boolean",
                      "default": false,
                      "example": false
                    },
                    "contactType": {
                      "description": "Contact's type",
                      "type": "string",
                      "enum": [
                        "work",
                        "home",
                        "personal"
                      ],
                      "default": "personal",
                      "example": "personal"
                    },
                    "photo": {
                      "description": "Contact's photo (binary file)",
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Update contact by id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully patched a contact!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/contacts": {
        "get": {
          "tags": [
            "Contacts"
          ],
          "summary": "Get list of contacts",
          "operationId": "getContacts",
          "description": "Get list of users with this endpoint",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "integer"
              },
              "example": 1
            },
            {
              "in": "query",
              "name": "perPage",
              "schema": {
                "type": "integer",
                "example": 10
              }
            },
            {
              "in": "query",
              "name": "sortBy",
              "schema": {
                "type": "string",
                "example": "age",
                "description": "All contact's fields can be mentioned. Default value - _id"
              }
            },
            {
              "in": "query",
              "name": "sortOrder",
              "schema": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "example": "asc"
              }
            },
            {
              "in": "query",
              "name": "contactType",
              "schema": {
                "type": "string",
                "enum": [
                  "work",
                  "home",
                  "personal"
                ],
                "example": "work"
              }
            },
            {
              "in": "query",
              "name": "isFavourite",
              "schema": {
                "type": "boolean",
                "example": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully found contacts!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully found contacts!"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "data",
                          "page",
                          "perPage",
                          "totalItems",
                          "totalPages",
                          "hasNextPage",
                          "hasPreviousPage"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/contact"
                            }
                          },
                          "page": {
                            "type": "number",
                            "example": 2
                          },
                          "perPage": {
                            "type": "number",
                            "example": 4
                          },
                          "totalItems": {
                            "type": "number",
                            "example": 4
                          },
                          "totalPages": {
                            "type": "number",
                            "example": 4
                          },
                          "hasNextPage": {
                            "type": "boolean",
                            "example": false
                          },
                          "hasPreviousPage": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "post": {
          "tags": [
            "Contacts"
          ],
          "summary": "Create contact",
          "operationId": "createContact",
          "description": "Create a contact with payload",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "phoneNumber",
                    "contactType"
                  ],
                  "properties": {
                    "name": {
                      "description": "Contact's name",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "phoneNumber": {
                      "description": "Contact's phone number",
                      "type": "string",
                      "example": 380000000001
                    },
                    "email": {
                      "description": "Contact's email",
                      "type": "string",
                      "example": "oleh1@example.com"
                    },
                    "isFavourite": {
                      "description": "Whether the contact is favourite",
                      "type": "boolean",
                      "default": false,
                      "example": false
                    },
                    "contactType": {
                      "description": "Contact's type",
                      "type": "string",
                      "enum": [
                        "work",
                        "home",
                        "personal"
                      ],
                      "default": "personal",
                      "example": "personal"
                    },
                    "photo": {
                      "description": "Contact's photo (binary file)",
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Creates a contact",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 201
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully created a contact!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      },
      "schemas": {
        "contact": {
          "type": "object",
          "required": [
            "name",
            "phoneNumber",
            "contactType",
            "userId"
          ],
          "properties": {
            "_id": {
              "description": "Contact's id",
              "type": "string",
              "pattern": "^[a-f\\d]{24}$",
              "example": "65e4decdd286b30065d54af9"
            },
            "name": {
              "description": "Contact's name",
              "type": "string",
              "example": "John Doe"
            },
            "phoneNumber": {
              "description": "Contact's phone number",
              "type": "string",
              "example": 380000000001
            },
            "email": {
              "description": "Contact's email",
              "type": "string",
              "example": "oleh1@example.com"
            },
            "isFavourite": {
              "description": "Whether the contact is favourite",
              "type": "boolean",
              "default": false,
              "example": false
            },
            "contactType": {
              "description": "Contact's type",
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "default": "personal",
              "example": "personal"
            },
            "userId": {
              "description": "ID of the user who owns this contact",
              "type": "string",
              "pattern": "^[a-f\\d]{24}$",
              "example": "65e4decdd286b30065d54af9"
            },
            "photo": {
              "description": "Link to contact's photo",
              "type": "string",
              "format": "uri",
              "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
            }
          }
        }
      },
      "responses": {
        "404": {
          "description": "Contact not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 404
                  },
                  "message": {
                    "type": "string",
                    "example": "Contact not found"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 500
                  },
                  "message": {
                    "type": "string",
                    "example": "Something went wrong"
                  },
                  "data": {
                    "type": "string",
                    "example": "Unexpected error"
                  }
                }
              }
            }
          }
        }
      }
    }
  }